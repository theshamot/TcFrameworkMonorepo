<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="ReflectionTest" Id="{4a4efa0b-46fc-06f3-25ce-6471c4302097}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ReflectionTest EXTENDS TcUnit.FB_TestSuite
VAR
	reflection : Reflection(THIS, SIZEOF(THIS^));
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[GetAllData();]]></ST>
    </Implementation>
    <Method Name="GetAllData" Id="{69013831-fb96-0481-0114-eea0bbbe6250}">
      <Declaration><![CDATA[METHOD GetAllData : BOOL
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Get all data');

AssertEquals_STRING(
	Actual := reflection.InstanceName,
	Expected := 'FrameworkMonorepo.TypesTests.PRG_Test.reflectionTest',
	Message := 'InstanceName was not obtained correctly');

AssertEquals_STRING(
	Actual := reflection.SolutionName,
	Expected := 'FrameworkMonorepo',
	Message := 'SolutionName was not obtained correctly');

AssertEquals_STRING(
	Actual := reflection.ProjectName,
	Expected := 'TypesTests',
	Message := 'ProjectName was not obtained correctly');

AssertEquals_STRING(
	Actual := reflection.ParentName,
	Expected := 'PRG_Test',
	Message := 'ParentName was not obtained correctly');

AssertEquals_STRING(
	Actual := reflection.Name,
	Expected := 'reflectionTest',
	Message := 'Name was not obtained correctly');

AssertEquals_STRING(
	Actual := reflection.ObjectPath,
	Expected := 'PRG_Test.reflectionTest',
	Message := 'ObjectPath was not obtained correctly');

AssertEquals_STRING(
	Actual := reflection.TypeName,
	Expected := 'ReflectionTest',
	Message := 'TypeName was not obtained correctly');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
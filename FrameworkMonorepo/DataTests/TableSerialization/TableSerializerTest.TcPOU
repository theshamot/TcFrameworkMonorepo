<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="TableSerializerTest" Id="{db9786d4-8b39-0367-3108-90fa712f7557}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TableSerializerTest EXTENDS TcUnit.FB_TestSuite
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SerializeTable();
SerializePartOfTableAndSwapColumns();]]></ST>
    </Implementation>
    <Method Name="SerializePartOfTableAndSwapColumns" Id="{8edd68f6-6783-07c2-1d3d-335d4388dba2}">
      <Declaration><![CDATA[METHOD SerializePartOfTableAndSwapColumns : BOOL
VAR
	table : ARRAY[0..9] OF TestTableRow;
	i : INT;
	
	buffer : STRING(1000);
	sb : StringBuilderExtBuffer(buffer);
	columns : ARRAY[0..3] OF __SYSTEM.AnyType;
	columnNames : ARRAY[0..3] OF T_MaxString;
	maxColumns : INT := 4;
	serializer : TableSerializer(
		stringBuilder := sb,
		columnDefinitionBuffer := ADR(columns),
		columnNameDefinitionBuffer := ADR(columnNames),
		columnDefinitionCount := maxColumns
	);
	
	expected : STRING(1000);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Serialize part of table and swap columns');

columnNames[0] := 'Description';
columnNames[1] := 'Time';
columnNames[2] := 'Value 2';
FOR i := 0 TO 9 DO
	table[i].timestamp := TO_TIME(i);
	table[i].value1 := i;
	table[i].value2 := i * 3.14;
	table[i].description := 'some text';
END_FOR

serializer.DecimalSeparator := ',';
serializer.Separator := ';';
serializer.DefineRow(table[0]);
serializer.RowCount := 7;
serializer.DefineNextColumn(table[0].description);
serializer.DefineNextColumn(table[0].timestamp);
serializer.DefineNextColumn(table[0].value2);

serializer.Serialize();

expected := 'Description;Time;Value 2$Nsome text;T#0ms;0,0$Nsome text;T#1ms;3,14$Nsome text;T#2ms;6,28$Nsome text;T#3ms;9,42$Nsome text;T#4ms;12,56$Nsome text;T#5ms;15,700001$Nsome text;T#6ms;18,84';
AssertEquals_BOOL(
	Expected := TRUE,
	Actual := expected = buffer,
	Message := 'Table was not properly serialized');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SerializeTable" Id="{c32b105b-c293-0339-34e3-978ec6eef04e}">
      <Declaration><![CDATA[METHOD SerializeTable : BOOL
VAR
	table : ARRAY[0..9] OF TestTableRow;
	i : INT;
	
	buffer : STRING(1000);
	sb : StringBuilderExtBuffer(buffer);
	columns : ARRAY[0..3] OF __SYSTEM.AnyType;
	columnNames : ARRAY[0..3] OF T_MaxString;
	columnCount : INT := 4;
	serializer : TableSerializer(
		stringBuilder := sb,
		columnDefinitionBuffer := ADR(columns),
		columnNameDefinitionBuffer := ADR(columnNames),
		columnDefinitionCount := columnCount
	);
	
	expected : STRING(1000);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('Serialize table');

columnNames[0] := 'Timestamp';
columnNames[1] := 'Value 1';
columnNames[2] := 'Value 2';
columnNames[3] := 'Description';
FOR i := 0 TO 9 DO
	table[i].timestamp := TO_TIME(i);
	table[i].value1 := i;
	table[i].value2 := i * 3.14;
	table[i].description := 'some text';
END_FOR

serializer.DecimalSeparator := ',';
serializer.Separator := ';';
serializer.DefineRow(table[0]);
serializer.RowCount := 10;
serializer.DefineNextColumn(table[0].timestamp);
serializer.DefineNextColumn(table[0].value1);
serializer.DefineNextColumn(table[0].value2);
serializer.DefineNextColumn(table[0].description);

serializer.Serialize();

expected := 'Timestamp;Value 1;Value 2;Description$NT#0ms;0;0,0;some text$NT#1ms;1;3,14;some text$NT#2ms;2;6,28;some text$NT#3ms;3;9,42;some text$NT#4ms;4;12,56;some text$NT#5ms;5;15,700001;some text$NT#6ms;6;18,84;some text$NT#7ms;7;21,98;some text$NT#8ms;8;25,12;some text$NT#9ms;9;28,26;some text';
AssertEquals_BOOL(
	Expected := TRUE,
	Actual := expected = buffer,
	Message := 'Table was not properly serialized');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>